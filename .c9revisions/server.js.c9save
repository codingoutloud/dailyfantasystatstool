{"ts":1339022290586,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var http = require('http'),\n    url = require('url'),\n    nodeStatic = require('node-static');\n\nvar staticFileServer = new(nodeStatic.Server)();\n\nhttp.createServer(function (req, res) {\n    console.log(url.parse(req.url));\n    req.addListener('end', function () {\n        //\n        // Serve files!\n        //\n        staticFileServer.serve(req, res);\n    });\n}).listen(process.env.PORT);"]],"start1":0,"start2":0,"length1":0,"length2":388}]],"length":388}
{"contributors":[],"silentsave":false,"ts":1339775164233,"patch":[[{"diffs":[[0,"var "],[-1,"http"],[1,"ioClient"],[0," = requi"]],"start1":0,"start2":0,"length1":16,"length2":20},{"diffs":[[0,"re('"],[-1,"http'),\n    url = require('url'),\n    nodeStatic = require('node-static');\n\nvar staticFileServer = new(nodeStatic.Server)();\n\nhttp.createServer("],[1,"socket.io-client'),\n    //chatServers = [\"http://agc.abhishekmunie.com\", \"http://agc1.abhishekmunie.com\",\n    //\"http://agc2.abhishekmunie.com\", \"http://agc3.abhishekmunie.com\"],\n    distributionServers = [\"http://agcmd1.herokuapp.com\", \"http://agcmd2.herokuapp.com\", \"http://agcmd3.herokuapp.com\"];\nvar distributionLen = distributionServers.length,\n    distributionSockets = [],\n    groups = {},\n    users = {};\n\nfunction generateDistributionSockets(group) {\n    var distributionSockets = [];\n    for (var len = distributionLen; len;) {\n        var ds = new ioClient.Socket(distributionServers[--len]);\n        ds.connect();\n        ds.on('createGroup', function(group) {\n            createGroup(group);\n        });\n        ds.on('message', function(data) {\n            groups[group].socket.emit(\"message\", data);\n        });\n        distributionSockets[len] = ds;\n    }\n    return distributionSockets;\n}\ndistributionSockets = generateDistributionSockets(\"\");\n\nfunction distributeMessage(sockets, data) {\n    sockets[Math.floor(Math.random() * distributionLen)].emit(\"message\", data);\n}\n\nfunction addGroupToUser(name, group, socket) {\n    users[name].sockets[group] = socket;\n    socket.on('message', function(data) {\n        var messageData = {\n            name: name,\n            data: data\n        };\n        socket.namespace.emit(\"message\", messageData);\n        distributeMessage(groups[group].distributionSockets, messageData);\n    });\n}\n\n"],[0,"func"]],"start1":20,"start2":20,"length1":152,"length2":1454},{"diffs":[[0,"ion "],[-1,"(req, res) {\n    console.log(url.parse(req.url));\n    req.addListener('end', function () {\n        //\n        // Serve files!\n        //\n        staticFileServer.serve(req, res);\n    });\n}).listen(process.env.PORT"],[1,"createGroup(group) {\n    if ((group.length == 1) || groups[group]) return;\n    groups[group] = {\n        distributionSockets: generateDistributionSockets(group),\n        socket: io.of(group).on('connection', function(socket) {\n            socket.get('name', function(err, name) {\n                addGroupToUser(name, group, socket);\n            });\n        })\n    };\n}\n\nfunction generateGroup(group) {\n    createGroup(group);\n    distributionSockets[Math.floor(Math.random() * distributionLen)].emit('createGroup', {\n        group: group\n    });\n}\nvar app = require('h5bp').server(require('express'), {\n    root: __dirname + \"/\",\n    maxAge: 1000 * 60 * 60\n});\napp.get('*', function(req, res) {\n    /*res.writeHead(404, {\n        \"Content-Type\": \"text/html\"\n    });*/\n    res.sendfile(__dirname + '/404.html');\n});\nvar io = require('socket.io').listen(app);\napp.listen(process.env.C9_PORT || process.env.PORT || process.env.VCAP_APP_PORT || process.env.VMC_APP_PORT || 1337 || 8001);\nio.configure(function() {\n/* //Production Settings\n    io.enable('browser client minification');\n    io.enable('browser client etag');\n    io.enable('browser client gzip');\n    io.set('log level', 1);\n    io.set('transports', ['websocket', 'htmlfile', 'xhr-polling', 'jsonp-polling', 'flashsocket']);*/\n    io.set(\"polling duration\", 10);\n    io.set('authorization', function(handshakeData, callback) {\n        callback(null, true); // error first callback style \n    });\n});\nio.sockets.on('connection', function(socket) {\n    var user = {\n        name: undefined,\n        sockets: {\n            root: socket\n        }\n    };\n    socket.on('setName', function(name, final, response) {\n        if (user[name]) {\n            response({\n                name: name,\n                available: false\n            });\n        }\n        else {\n            if (final) {\n                socket.set('name', name, function() {});\n                user.name = name;\n                users[name] = user;\n            }\n            response({\n                name: name,\n                available: true\n            });\n        }\n    });\n    socket.on('createGroup', function(group) {\n        createGroup(group);\n    });\n    socket.on('generateGroup', function(group) {\n        generateGroup(group);\n    });\n    socket.on('disconnect', function() {});\n    socket.namespace.emit(\"message\", {\n        name: \"server\",\n        message: \"connected new member\"\n    });\n});\ngenerateGroup(\"/\""],[0,");"]],"start1":1475,"start2":1475,"length1":219,"length2":2455}]],"length":3930,"saved":false}
{"ts":1339775222661,"patch":[[{"diffs":[[0,") {\n"],[-1,"    /*res.writeHead(404, {\n        \"Content-Type\": \"text/html\"\n    });*/\n"],[0,"    "]],"start1":2170,"start2":2170,"length1":81,"length2":8}]],"length":3857,"saved":false}
