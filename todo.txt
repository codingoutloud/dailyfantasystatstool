An earlier versio of this is running at http://azure-nodejs.cloudapp.net!

Next steps:
x Clean up directory - remove modules, non-used files
x get app to run with loader, remove classes.js
x Add extjs directories
x Create dummy stats data, stats record, stats store, grid for stats
x Move dummy data to middle pane and remove feed list from middle
x Change left pane from Feeds to Filters and add a dummy filter
x Move css into css file
x Change theme
x Change namespace from FV to DFST
x Change dummy data to baseball data
x Add rest of relevant baseball stats to model (based on fanduel scoring), 
x then grid, then dummy data
x Create drill down panel
x Add panel to layout
x Add select logic to open up drilldown panel
x In drill down panel add details for player info.
x Add store for player stats
x Add date to filter players for game day
x Format date in player grid
x Add more data
x Hide details panel until player selected
x Fix bug on drill down panel - can't expand after collapse
x Fix css to remove references to feed, etc.
x move references to articlegrid, feedshow
x find data source - done mlb gameday api via updated Baseball Hacks scripts writing data to SQL Azure
x choose web api technology - done .net web api
x create initial web apis for teams/players
x try to hit web apis from cloud9 page (via localhost) - enable CORS support on Web API
x run upload scripts to get more data from mlb
x fill in more data for main grid
x change properties of single, double, triple to not have a leading digit
x Add paging to players grid - simple paging done, always gets all from db, but pages in controller layer
x Add server side sorting (OR client side paging and let extjs do sorting)
x Change all stats to include totals and not averages
x fix runs stats - not there???
x add games played to grid
x move afp calculation to server
x create script to clean out duplicate games
x get rest of available stats from web service
x get real data
x save data in sql azure
x innings pitched as whole number or .1 or .2 (1 out, 2 out)
x create web api for individual players/game data
x get hit by pitch stat
x double check batting stats in mlb load scripts
x get schedule data
x add sorting to per game grid
x add filter by game date
x why does .filter() add the same filter value from stats controller and filters controller? - bug in filter code, worked around it
x capitalize team names
x create team and player tables
x get team lists and roster data!!!
x create upload script for players
x add player position!
x need option to hide all but probable pitchers
x add filters for all positions?
x rebuild db from scratch :-(
x make sure update script properly puts in the teamID for the roster (nymets is wrong!)
x change scoring to be selectable
x Add interface for scoring
x apply selectable scoring to pergameplayerstats; player stats getting retrieved 3 times - fix!!

Next.
==========
upgrade to extjs 4.1
get rest of stats to fill in draft day scoring
check in!
document all db scripts

Misc.
==========
add opponent column
add games list somewhere on page
double check scoring for fanduel
start saving off daily pricing data from fanduel?
create state manager for grids
more logging

UI:
==========
add client-side paging to game grid (bottom one), 10 per page?
scrolling broken on top grid
add teams filters
add column with most recent position played in top grid
add column with position played in bottom grid
Add scoring column(s) dynamically
Add model for scoring to save in db?
Change UI to show team code, not team id
need glossary or tooltips for column headers
add scoring for other sites besides FanDuel
need player filters - use generic grid filters?
Change theme colors
use Ext.ux.grid.FiltersFeatureView for grid filters??

NodeJS:
===========
use express?
Change server.js implementation to be cleaner - use some modules, but not sure which

ExtJS:
===========
Figure out build process for Ext JS 4
On stores, encodeFilters, encodeSorters are all copy-paste: Either create a
common proxy for them to all use or fix the server side to accept the default
sort and filter format generated by EXTJS (latter is preferable)

Loader/Data:
===========
Need to move connection strings to an external file?
recheck all stats against an external source - particularly games played and appearances for pitchers
double check pitching stats in mlb load scripts - might be more stats we're interested in
double check fielding stats in mlb load scripts? - don't need to yet
Clean up logging - don't exit on errors, just log and continue
schedule the db update scripts to run regularly
create script to roll up player data?
change schedule update to load from yesterday to 5 days from now... don't need rest of season

Maintenance:
===========
add copyrights to all files
Need to check in Web API solution
Need to check in loader scripts

useful urls:
http://stackoverflow.com/questions/7447325/how-to-set-default-sort-column-in-extjs4-grid-and-change-date-format
